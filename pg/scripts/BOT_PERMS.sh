#!/bin/bash
set -e

if [ -z ${BOT_DATABASE_NAME} ]; then
  DATABASE=${BOT_DATABASE_NAME}
else
  DATABASE="$(< /run/secrets/BOT_DATABASE_NAME)"
fi

if [ -z ${BOT_DATABASE_USER} ]; then
  USER="${BOT_DATABASE_USER}"
else
  USER="$(< /run/secrets/BOT_DATABASE_USER)"
fi

if [ -z ${BOT_DATABASE_PASS} ]; then
  PASSW="${BOT_DATABASE_PASS}"
else
  PASSW="$(< /run/secrets/BOT_DATABASE_PASS)"
fi

DATABASE_USER="${DATABASE}"_USER
READONLY=${READONLY_ROLE}

# PULLING UP MIGRATIONS

PGPASSWORD="$PASSWORD_PASSWORD" psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
  CREATE DATABASE IF NOT EXISTS $DATABASE
  CREATE ROLE IF NOT EXISTS     $DATABASE_USER

  CREATE USER IF NOT EXISTS     $USER WITH ENCRYPTED PASSWORD '$PASSW'

  GRANT $DATABASE_USER TO       $USER
  GRANT $DATABASE_USER TO       $READONLY

  REVOKE ALL ON DATABASE $DATABASE FROM PUBLIC
  GRANT CONNECT ON DATABASE $DATABASE TO $DATABASE_USER
EOSQL

PGPASSWORD="$POSTGRES_PASSWORD" psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
  REVOKE ALL ON SCHEMA public FROM PUBLIC;
  GRANT USAGE ON SCHEMA public TO $DATABASE_USER

  ALTER DEFAULT PRIVILEGES IN SCHEMA public
		GRANT USAGE, SELECT ON SEQUENCES TO $DATABASE_USER;
	ALTER DEFAULT PRIVILEGES IN SCHEMA public
		GRANT SELECT ON TABLES TO $READONLY;
	ALTER DEFAULT PRIVILEGES IN SCHEMA public
		GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO $USER;
EOSQL
